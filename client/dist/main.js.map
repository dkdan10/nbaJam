{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/src/js/player.js","webpack:///./client/src/js/utils/rect.js","webpack:///./client/src/js/utils/keymaster.js","webpack:///./client/src/index.js","webpack:///./client/src/js/game.js","webpack:///./client/src/js/court.js","webpack:///./client/src/js/hoop.js","webpack:///./client/src/js/ball.js","webpack:///./client/src/js/utils/circle.js","webpack:///./client/src/js/scoreboard.js","webpack:///./client/src/js/player2.js","webpack:///./client/src/js/menu_screens/main_menu.js","webpack:///./client/src/js/menu_screens/character_select.js","webpack:///./client/src/js/online_player.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CONSTANTS","GRAVITY","PLAYER_WIDTH","PLAYER_HEIGHT","MOVESPEED","JUMP_HEIGHT","Player","court","ball","spriteSrc","width","height","velocity","x","y","position","color","jumping","facingRight","sprite","Image","src","Rect","ctx","this","move","drawImage","isPressed","preformAction","checkBall","handleGravity","checkBounds","possession","shoot","isOverlappingRect","claimPossession","size","rectClass","myBounds","getBounds","rect","left","right","top","bottom","global","k","_handlers","_mods","16","18","17","91","_scope","_MODIFIERS","shift","alt","option","ctrl","control","command","_MAP","backspace","tab","clear","enter","esc","escape","space","up","down","del","home","end","pageup","pagedown","'","code","toUpperCase","charCodeAt","_downKeys","index","array","item","length","compareArray","a1","a2","modifierMap","updateModifierKey","event","assignKey","scope","method","keys","mods","getKeys","undefined","split","getMods","push","shortcut","getScope","replace","slice","mi","addEvent","addEventListener","attachEvent","window","document","handler","modifiersMatch","keyCode","filter","preventDefault","returnValue","stopPropagation","cancelBubble","dispatch","splice","previousKey","setScope","deleteScope","handlers","tagName","target","srcElement","getPressedKeyCodes","noConflict","unbind","multipleKeys","j","obj","canvas","getElementById","canvasBackground","e","indexOf","NBAJamGame","backgroundCanvas","getContext","dimensions","mainMenu","MainMenu","startGame","startOnlineGame","playingGame","renderMenu","setupKeyHandlers","render","requestAnimationFrame","leftSprite","rightSprite","restart","mySide","gameId","onlineGameId","runOnlineGame","Court","leftHoop","Hoop","rightHoop","Ball","scoreboard","Scoreboard","player","player2","Player2","animate","clearRect","gameOver","displayWinner","myPlayer","OnlinePlayer","otherPlayer","socket","on","data","emit","setTimeout","showMenu","runOnline","fromSocket","id","otherPlayerFacing","otherPlayerJumping","timeLeft","text","score","loc","font","fillStyle","textAlign","fillText","strokeStyle","lineWidth","strokeText","COURT_FLOOR","COURT_WIDTH","HOOP_Y_MULTIPLIER","HOOP_HEIGHT","HOOP_WIDTH","HOOP_X_DISTANCE","BACKBOARD_WIDTH","BACKBOARD_HEIGHT","backgroundCavas","hoopLeftPosition","hoopRightPosition","leftHoopImage","rightHoopImage","courtImage","setupBackgroundCourt","fillRect","onload","hoopSide","backboard","Backboard","scoreHitbox","ScoreHitbox","justScored","checkBallCollision","radius","hoop","RADIUS","BOUNCE_RETENTION","DRIBBLE_SPEED","noTouch","power","Circle","beginPath","arc","Math","PI","fill","closePath","shootingPlayer","shootingTimeout","clearTimeout","releaseBall","scorePosition","hypot","velocityX","velocityY","diff","adjustedX","removePossession","moveWithPlayerPossession","fall","distX","abs","distY","dx","dy","countDown","setInterval","clearInterval","leftNameLoc","leftScoreLoc","timeLeftLoc","rightNameLoc","rightScoreLoc","selectedOption","options","characterSelect","CharacterSelect","selectedCharacters","selectingCharacters","leftSrc","rightSrc","onlineMode","isPlayingLeft","forEach","measureText","leftSelected","rightSelected","characters","leftChar","rightChar","leftReady","rightReady","leftPlayerId","rightPlayerId","isPlayingRight","leftSideChar","rightSideChar","startSide","active"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import Rect from './utils/rect';\nimport key from './utils/keymaster';\n\n\nconst CONSTANTS = {\n    GRAVITY: 0.5,\n    PLAYER_WIDTH: 40,\n    PLAYER_HEIGHT: 70,\n    MOVESPEED: 5,\n    // WITH_BALL_MOVESPEED: 3.5,\n    JUMP_HEIGHT: 14,\n    // ON_FIRE_JUMP_HEIGHT: 16\n};\n\nexport default class Player extends Rect {\n    constructor(court, ball, spriteSrc) {\n        super({ width: CONSTANTS.PLAYER_WIDTH, height: CONSTANTS.PLAYER_HEIGHT })\n        this.court = court\n        this.ball = ball\n\n        this.velocity = {\n            x: 0,\n            y: 0\n        }\n        this.position = {\n            x: this.court.width - this.width,\n            y: this.court.position.y - this.height\n        }\n        this.color = \"red\";\n        this.jumping = false;\n        this.facingRight = true;\n        // this.dennisRodmanHead = new Image();\n        // this.dennisRodmanHead.src = 'src/assets/dennisRodmanHead.png'\n        this.sprite = new Image();\n        this.sprite.src = spriteSrc\n    }\n\n    animate(ctx) {\n        this.move();\n        // ctx.fillStyle = this.color;\n        // ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n\n        // ctx.drawImage(this.dennisRodmanHead, \n        //         this.position.x - this.width + (this.dennisRodmanHead.width / 2), \n        //         this.position.y - this.height + (this.dennisRodmanHead.height / 3))\n        ctx.drawImage(this.sprite,\n                this.position.x - 5,\n            this.position.y - this.sprite.height / 3)\n    }\n\n    move () {\n        if (key.isPressed('right')) {\n            this.position.x += CONSTANTS.MOVESPEED;\n            this.facingRight = true\n        }\n        if (key.isPressed('left')) {\n            this.position.x -= CONSTANTS.MOVESPEED;\n            this.facingRight = false\n        }\n\n        // JUMPING\n        if (key.isPressed('up') && !this.jumping) {\n            this.velocity.y = CONSTANTS.JUMP_HEIGHT;\n            this.jumping = true\n        }\n\n        if (key.isPressed('/')) {\n            this.preformAction();\n        }\n\n        this.checkBall() \n\n        this.handleGravity()\n\n        this.checkBounds()\n    }\n\n    preformAction() {\n        if (this.ball.possession === this) {\n            // Hold to shoot. \n            this.ball.shoot()\n        }\n    }\n\n    checkBall() {\n        if (!this.ball.possession && this.ball.isOverlappingRect(this)) {\n            this.ball.claimPossession(this)\n        }\n    }\n\n    handleGravity() {\n        this.position.y -= this.velocity.y;\n        // GRAVITY\n        // if the pos is greater than the floor\n        if (this.position.y + this.height < this.court.position.y) {\n            this.velocity.y -= CONSTANTS.GRAVITY;\n            // else set the pos to the floor\n        } else {\n            this.velocity.y = 0\n            this.position.y = this.court.position.y - this.height\n            this.jumping = false\n        }\n    }\n\n    checkBounds() {\n        if (this.position.x > this.court.width - this.width) {\n            this.position.x = this.court.width - this.width\n        } else if (this.position.x < 0) {\n            this.position.x = 0\n        }\n    }\n\n}\n","export default class Rect {\n    constructor(size) {\n        this.width = size.width;\n        this.height = size.height;\n    }\n\n    isOverlappingOtherRect(rectClass) {\n        const myBounds = this.getBounds()\n        const rect = rectClass.getBounds()\n        if (myBounds.left > rect.right || myBounds.right < rect.left) {\n            return false;\n        }\n        if (myBounds.top > rect.bottom || myBounds.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    }\n\n    getBounds() {\n        return {\n            left: this.position.x,\n            right: this.position.x + this.width,\n            top: this.position.y,\n            bottom: this.position.y + this.height\n        };\n    }\n\n}","//     keymaster.js\n//     (c) 2011-2013 Thomas Fuchs\n//     keymaster.js may be freely distributed under the MIT license.\n\n; (function (global) {\n    var k,\n        _handlers = {},\n        _mods = { 16: false, 18: false, 17: false, 91: false },\n        _scope = 'all',\n        // modifier keys\n        _MODIFIERS = {\n            '⇧': 16, shift: 16,\n            '⌥': 18, alt: 18, option: 18,\n            '⌃': 17, ctrl: 17, control: 17,\n            '⌘': 91, command: 91\n        },\n        // special keys\n        _MAP = {\n            backspace: 8, tab: 9, clear: 12,\n            enter: 13, 'return': 13,\n            esc: 27, escape: 27, space: 32,\n            left: 37, up: 38,\n            right: 39, down: 40,\n            del: 46, 'delete': 46,\n            home: 36, end: 35,\n            pageup: 33, pagedown: 34,\n            ',': 188, '.': 190, '/': 191,\n            '`': 192, '-': 189, '=': 187,\n            ';': 186, '\\'': 222,\n            '[': 219, ']': 221, '\\\\': 220\n        },\n        code = function (x) {\n            return _MAP[x] || x.toUpperCase().charCodeAt(0);\n        },\n        _downKeys = [];\n\n    for (k = 1; k < 20; k++) _MAP['f' + k] = 111 + k;\n\n    // IE doesn't support Array#indexOf, so have a simple replacement\n    function index(array, item) {\n        var i = array.length;\n        while (i--) if (array[i] === item) return i;\n        return -1;\n    }\n\n    // for comparing mods before unassignment\n    function compareArray(a1, a2) {\n        if (a1.length != a2.length) return false;\n        for (var i = 0; i < a1.length; i++) {\n            if (a1[i] !== a2[i]) return false;\n        }\n        return true;\n    }\n\n    var modifierMap = {\n        16: 'shiftKey',\n        18: 'altKey',\n        17: 'ctrlKey',\n        91: 'metaKey'\n    };\n    function updateModifierKey(event) {\n        for (k in _mods) _mods[k] = event[modifierMap[k]];\n    };\n\n    // handle keydown event\n    function dispatch(event) {\n        var key, handler, k, i, modifiersMatch, scope;\n        key = event.keyCode;\n\n        if (index(_downKeys, key) == -1) {\n            _downKeys.push(key);\n        }\n\n        // if a modifier key, set the key.<modifierkeyname> property to true and return\n        if (key == 93 || key == 224) key = 91; // right command on webkit, command on Gecko\n        if (key in _mods) {\n            _mods[key] = true;\n            // 'assignKey' from inside this closure is exported to window.key\n            for (k in _MODIFIERS) if (_MODIFIERS[k] == key) assignKey[k] = true;\n            return;\n        }\n        updateModifierKey(event);\n\n        // see if we need to ignore the keypress (filter() can can be overridden)\n        // by default ignore key presses if a select, textarea, or input is focused\n        if (!assignKey.filter.call(this, event)) return;\n\n        // abort if no potentially matching shortcuts found\n        if (!(key in _handlers)) return;\n\n        scope = getScope();\n\n        // for each potential shortcut\n        for (i = 0; i < _handlers[key].length; i++) {\n            handler = _handlers[key][i];\n\n            // see if it's in the current scope\n            if (handler.scope == scope || handler.scope == 'all') {\n                // check if modifiers match if any\n                modifiersMatch = handler.mods.length > 0;\n                for (k in _mods)\n                    if ((!_mods[k] && index(handler.mods, +k) > -1) ||\n                        (_mods[k] && index(handler.mods, +k) == -1)) modifiersMatch = false;\n                // call the handler and stop the event if neccessary\n                if ((handler.mods.length == 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91]) || modifiersMatch) {\n                    if (handler.method(event, handler) === false) {\n                        if (event.preventDefault) event.preventDefault();\n                        else event.returnValue = false;\n                        if (event.stopPropagation) event.stopPropagation();\n                        if (event.cancelBubble) event.cancelBubble = true;\n                    }\n                }\n            }\n        }\n    };\n\n    // unset modifier keys on keyup\n    function clearModifier(event) {\n        var key = event.keyCode, k,\n            i = index(_downKeys, key);\n\n        // remove key from _downKeys\n        if (i >= 0) {\n            _downKeys.splice(i, 1);\n        }\n\n        if (key == 93 || key == 224) key = 91;\n        if (key in _mods) {\n            _mods[key] = false;\n            for (k in _MODIFIERS) if (_MODIFIERS[k] == key) assignKey[k] = false;\n        }\n    };\n\n    function resetModifiers() {\n        for (k in _mods) _mods[k] = false;\n        for (k in _MODIFIERS) assignKey[k] = false;\n    };\n\n    // parse and assign shortcut\n    function assignKey(key, scope, method) {\n        var keys, mods;\n        keys = getKeys(key);\n        if (method === undefined) {\n            method = scope;\n            scope = 'all';\n        }\n\n        // for each shortcut\n        for (var i = 0; i < keys.length; i++) {\n            // set modifier keys if any\n            mods = [];\n            key = keys[i].split('+');\n            if (key.length > 1) {\n                mods = getMods(key);\n                key = [key[key.length - 1]];\n            }\n            // convert to keycode and...\n            key = key[0]\n            key = code(key);\n            // ...store handler\n            if (!(key in _handlers)) _handlers[key] = [];\n            _handlers[key].push({ shortcut: keys[i], scope: scope, method: method, key: keys[i], mods: mods });\n        }\n    };\n\n    // unbind all handlers for given key in current scope\n    function unbindKey(key, scope) {\n        var multipleKeys, keys,\n            mods = [],\n            i, j, obj;\n\n        multipleKeys = getKeys(key);\n\n        for (j = 0; j < multipleKeys.length; j++) {\n            keys = multipleKeys[j].split('+');\n\n            if (keys.length > 1) {\n                mods = getMods(keys);\n            }\n\n            key = keys[keys.length - 1];\n            key = code(key);\n\n            if (scope === undefined) {\n                scope = getScope();\n            }\n            if (!_handlers[key]) {\n                return;\n            }\n            for (i = 0; i < _handlers[key].length; i++) {\n                obj = _handlers[key][i];\n                // only clear handlers if correct scope and mods match\n                if (obj.scope === scope && compareArray(obj.mods, mods)) {\n                    _handlers[key][i] = {};\n                }\n            }\n        }\n    };\n\n    // Returns true if the key with code 'keyCode' is currently down\n    // Converts strings into key codes.\n    function isPressed(keyCode) {\n        if (typeof (keyCode) == 'string') {\n            keyCode = code(keyCode);\n        }\n        return index(_downKeys, keyCode) != -1;\n    }\n\n    function getPressedKeyCodes() {\n        return _downKeys.slice(0);\n    }\n\n    function filter(event) {\n        var tagName = (event.target || event.srcElement).tagName;\n        // ignore keypressed in any elements that support keyboard data input\n        return !(tagName == 'INPUT' || tagName == 'SELECT' || tagName == 'TEXTAREA');\n    }\n\n    // initialize key.<modifier> to false\n    for (k in _MODIFIERS) assignKey[k] = false;\n\n    // set current scope (default 'all')\n    function setScope(scope) { _scope = scope || 'all' };\n    function getScope() { return _scope || 'all' };\n\n    // delete all handlers for a given scope\n    function deleteScope(scope) {\n        var key, handlers, i;\n\n        for (key in _handlers) {\n            handlers = _handlers[key];\n            for (i = 0; i < handlers.length;) {\n                if (handlers[i].scope === scope) handlers.splice(i, 1);\n                else i++;\n            }\n        }\n    };\n\n    // abstract key logic for assign and unassign\n    function getKeys(key) {\n        var keys;\n        key = key.replace(/\\s/g, '');\n        keys = key.split(',');\n        if ((keys[keys.length - 1]) == '') {\n            keys[keys.length - 2] += ',';\n        }\n        return keys;\n    }\n\n    // abstract mods logic for assign and unassign\n    function getMods(key) {\n        var mods = key.slice(0, key.length - 1);\n        for (var mi = 0; mi < mods.length; mi++)\n            mods[mi] = _MODIFIERS[mods[mi]];\n        return mods;\n    }\n\n    // cross-browser events\n    function addEvent(object, event, method) {\n        if (object.addEventListener)\n            object.addEventListener(event, method, false);\n        else if (object.attachEvent)\n            object.attachEvent('on' + event, function () { method(window.event) });\n    };\n\n    // set the handlers globally on document\n    addEvent(document, 'keydown', function (event) { dispatch(event) }); // Passing _scope to a callback to ensure it remains the same by execution. Fixes #48\n    addEvent(document, 'keyup', clearModifier);\n\n    // reset modifiers to false whenever the window is (re)focused.\n    addEvent(window, 'focus', resetModifiers);\n\n    // store previously defined key\n    var previousKey = window.key;\n\n    // restore previously defined key and return reference to our key object\n    function noConflict() {\n        var k = window.key;\n        window.key = previousKey;\n        return k;\n    }\n\n    // set window.key and window.key.set/get/deleteScope, and the default filter\n    window.key = assignKey;\n    window.key.setScope = setScope;\n    window.key.getScope = getScope;\n    window.key.deleteScope = deleteScope;\n    window.key.filter = filter;\n    window.key.isPressed = isPressed;\n    window.key.getPressedKeyCodes = getPressedKeyCodes;\n    window.key.noConflict = noConflict;\n    window.key.unbind = unbindKey;\n\n    if (typeof module !== 'undefined') module.exports = assignKey;\n\n})(this);","import NBAJamGame from './js/game.js'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const canvas = document.getElementById('nba-jam-game');\n    const canvasBackground = document.getElementById('nba-jam-background');\n\n    // Prevent scrolling with arrow keys\n    window.addEventListener(\"keydown\", function (e) {\n        // space and arrow keys\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n            e.preventDefault();\n        }\n    }, false);\n    new NBAJamGame(canvas, canvasBackground);\n});","import Player from './player'\nimport Court from './court';\nimport Hoop from './hoop';\nimport Ball from './ball';\nimport Scoreboard from './scoreboard';\nimport Player2 from './player2';\nimport MainMenu from './menu_screens/main_menu';\nimport OnlinePlayer from './online_player';\n\nexport default class NBAJamGame {\n    constructor(canvas, backgroundCanvas) {        \n        this.ctx = canvas.getContext(\"2d\");\n        this.backgroundCanvas = backgroundCanvas\n        this.dimensions = { width: canvas.width, height: canvas.height };\n        this.mainMenu = new MainMenu(this.dimensions, this.startGame.bind(this), this.startOnlineGame.bind(this))\n        this.playingGame = false;\n        this.renderMenu()\n    }\n\n    showMenu() {\n        this.mainMenu.setupKeyHandlers()\n        this.renderMenu(this.ctx)\n    }\n\n    renderMenu () {\n        this.mainMenu.render(this.ctx)\n        if (!this.playingGame) requestAnimationFrame(this.renderMenu.bind(this));\n    }\n\n    startGame (leftSprite, rightSprite) {\n        this.playingGame = true\n        this.restart(leftSprite, rightSprite)\n    }\n\n    startOnlineGame(leftSprite, rightSprite, mySide, gameId) {\n        this.playingGame = true\n        this.onlineGameId = gameId\n        this.runOnlineGame(leftSprite, rightSprite, mySide)\n    }\n\n    restart(leftSprite, rightSprite) {\n        // START ANIMATION SYCLE\n        this.court = new Court(this.dimensions, this.backgroundCanvas);\n        this.leftHoop = new Hoop(this.dimensions, \"LEFT\");\n        this.rightHoop = new Hoop(this.dimensions, \"RIGHT\");\n        this.ball = new Ball(this.dimensions, this.court, this.leftHoop, this.rightHoop)\n\n        this.scoreboard = new Scoreboard(this.dimensions, this.leftHoop, this.rightHoop)\n\n        this.player = new Player(this.court, this.ball, rightSprite);\n        this.player2 = new Player2(this.court, this.ball, leftSprite);\n\n        this.animate();\n    }\n    \n    animate() {        \n        // CREATES BACKGROUND\n        // this.ctx.fillStyle = \"orange\";\n        // this.ctx.fillRect(0, 0, this.dimensions.width, this.dimensions.height);\n        this.ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n\n        \n        this.court.animate(this.ctx)\n        // ANIMATE OBJECTS\n        this.player.animate(this.ctx)\n        this.player2.animate(this.ctx)\n        this.ball.animate(this.ctx)\n        this.leftHoop.animate(this.ctx)\n        this.rightHoop.animate(this.ctx)\n        \n        this.scoreboard.animate(this.ctx)\n        \n        if (this.gameOver()) {\n            this.displayWinner()\n        }\n        // REQUEST NEXT FRAME\n        if (this.playingGame) {\n        //     setTimeout( () => {\n                requestAnimationFrame(this.animate.bind(this));\n            // }, 1000 / 60)\n        }\n    }\n\n    runOnlineGame(leftSprite, rightSprite, mySide) {\n        this.court = new Court(this.dimensions, this.backgroundCanvas);\n        this.leftHoop = new Hoop(this.dimensions, \"LEFT\");\n        this.rightHoop = new Hoop(this.dimensions, \"RIGHT\");\n        this.ball = new Ball(this.dimensions, this.court, this.leftHoop, this.rightHoop, this.onlineGameId)\n\n        this.scoreboard = new Scoreboard(this.dimensions, this.leftHoop, this.rightHoop)\n\n        if (mySide === \"LEFT\") {\n            this.myPlayer = new OnlinePlayer(this.court, this.ball, leftSprite, \"LEFT\", true)\n            this.otherPlayer = new OnlinePlayer(this.court, this.ball, rightSprite, \"RIGHT\", false)\n        } else {\n            this.otherPlayer = new OnlinePlayer(this.court, this.ball, leftSprite, \"LEFT\", false)\n            this.myPlayer = new OnlinePlayer(this.court, this.ball, rightSprite, \"RIGHT\", true)\n        }\n\n        socket.on(\"updateOtherPos\", (data) => {\n            this.otherPlayer.position = {\n                x: data[\"x\"],\n                y: data[\"y\"],\n            }\n            this.otherPlayer.facingRight  = data[\"otherPlayerFacing\"]\n            this.otherPlayer.jumping = data[\"otherPlayerJumping\"]\n        }) \n        socket.on(\"updateBallPossesion\", data => {\n            this.ball.possession = this.otherPlayer\n            socket.emit(\"registeredPossesionChange\", {\n                gameId: this.onlineGameId\n            })\n        })\n        socket.on(\"updateNoBallPossesion\", data => {\n            this.ball.possession = null\n            this.ball.position = data[\"position\"]\n            this.ball.velocity = data[\"velocity\"]\n        })\n        // socket.on(\"updateBallPos\", data => {\n        //     this.ball.position = data[\"position\"]\n        //     this.ball.velocity = data[\"velocity\"]\n        //     this.otherPlayer.facingRight = data[\"otherPlayerFacing\"]\n        // })\n        socket.on(\"endGameFromDisconnect\", () => {\n            this.playingGame = false\n            this.onlineGameId = null\n            setTimeout(() => {\n                this.showMenu()\n            }, 1000);\n        })\n\n        this.runOnline();\n    }\n\n    runOnline () {\n        // CREATES BACKGROUND\n        // this.ctx.fillStyle = \"orange\";\n        // this.ctx.fillRect(0, 0, this.dimensions.width, this.dimensions.height);\n        this.ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n\n\n        this.court.animate(this.ctx)\n        // ANIMATE OBJECTS\n        this.otherPlayer.animate(this.ctx)\n        this.myPlayer.animate(this.ctx)\n        \n        this.ball.animate(this.ctx)\n\n        this.leftHoop.animate(this.ctx)\n        this.rightHoop.animate(this.ctx)\n\n        this.scoreboard.animate(this.ctx)\n\n        if (this.gameOver()) {\n            this.displayWinner()\n        }\n\n\n        socket.emit(\"updateMyPos\", {\n            gameId: this.onlineGameId,\n            fromSocket: socket.id,\n            x: this.myPlayer.position.x,\n            y: this.myPlayer.position.y,\n            otherPlayerFacing: this.myPlayer.facingRight,\n            otherPlayerJumping: this.myPlayer.jumping\n        })\n        socket.emit(\"updateBallPos\", {\n            gameId: this.onlineGameId,\n            fromSocket: socket.id,\n            x: this.ball.position.x,\n            y: this.ball.position.y\n        })\n        // REQUEST NEXT FRAME\n        if (this.playingGame) {\n        //     setTimeout(() => {\n                requestAnimationFrame(this.runOnline.bind(this));\n            // }, 1000 / 60)\n        }\n    }\n\n\n\n    gameOver () {\n        return this.scoreboard.timeLeft === 0\n    }\n\n    displayWinner () {\n        let text;\n        if (this.rightHoop.score > this.leftHoop.score) {\n            text = \"Player 1 wins\"\n        } else if (this.leftHoop.score > this.rightHoop.score) {\n            text = \"Player 2 wins\"\n        } else {\n            text = \"Tie Game\"\n        }\n        let loc = { x: this.dimensions.width / 2, y: this.dimensions.height / 2 }\n        this.ctx.font = \"bold 40pt serif\";\n        this.ctx.fillStyle = \"white\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(`${text}`, loc.x, loc.y);\n        this.ctx.strokeStyle = \"black\";\n        this.ctx.lineWidth = 2;\n        this.ctx.strokeText(`${text}`, loc.x, loc.y);\n        \n        this.playingGame = false\n        this.onlineGameId = null\n        setTimeout(() => {\n            this.showMenu()\n        }, 2000);\n    }\n\n}","import Rect from \"./utils/rect\";\n\nconst CONSTANTS = {\n    COURT_FLOOR: 0.85,\n    COURT_WIDTH: 5,\n    HOOP_Y_MULTIPLIER: 0.3,\n    HOOP_HEIGHT: 40,\n    HOOP_WIDTH: 50,\n    HOOP_X_DISTANCE: 50,\n    BACKBOARD_WIDTH: 15,\n    BACKBOARD_HEIGHT: 50\n};\n\nexport default class Court extends Rect {\n    constructor(dimensions, backgroundCavas) {\n        super({ width: dimensions.width, height: CONSTANTS.COURT_WIDTH })\n        this.dimensions = dimensions\n        this.position = {\n            x: 0,\n            y: dimensions.height * CONSTANTS.COURT_FLOOR\n        }\n        this.hoopLeftPosition = {\n            x: 0 + CONSTANTS.HOOP_X_DISTANCE - 6,\n            y: dimensions.height * CONSTANTS.HOOP_Y_MULTIPLIER\n        }\n        this.hoopRightPosition = {\n            x: dimensions.width - CONSTANTS.HOOP_X_DISTANCE - CONSTANTS.HOOP_WIDTH - CONSTANTS.BACKBOARD_WIDTH,\n            y: dimensions.height * CONSTANTS.HOOP_Y_MULTIPLIER\n        }\n        this.leftHoopImage = new Image();\n        this.rightHoopImage = new Image();\n        this.leftHoopImage.src = \"src/assets/cartoonHoopLeft.png\"\n        this.rightHoopImage.src = \"src/assets/cartoonHoopRight.png\"\n\n        this.color = \"green\"\n        this.courtImage = new Image();\n        this.courtImage.src = \"src/assets/bballcourtsmall.png\"\n        this.setupBackgroundCourt(backgroundCavas)\n    }  \n\n    setupBackgroundCourt(canvas) {\n        const ctx = canvas.getContext(\"2d\");\n        ctx.fillStyle = \"orange\";\n        ctx.fillRect(0, 0, this.dimensions.width, this.dimensions.height);\n        this.courtImage.onload = () => {\n            ctx.drawImage(this.courtImage,\n                this.position.x - this.courtImage.width / 12, \n                this.position.y - this.courtImage.height / 2,\n                this.width + this.courtImage.width / 6,\n                this.courtImage.height);\n        }\n        this.leftHoopImage.onload = () => {\n            ctx.drawImage(this.leftHoopImage,\n                this.hoopLeftPosition.x,\n                this.hoopLeftPosition.y - (CONSTANTS.HOOP_HEIGHT + 5),\n                CONSTANTS.HOOP_WIDTH + CONSTANTS.BACKBOARD_WIDTH + 10,\n                CONSTANTS.HOOP_HEIGHT + CONSTANTS.BACKBOARD_HEIGHT)\n        }\n        this.rightHoopImage.onload = () => {\n            ctx.drawImage(this.rightHoopImage,\n                this.hoopRightPosition.x,\n                this.hoopRightPosition.y - (CONSTANTS.HOOP_HEIGHT + 5),\n                CONSTANTS.HOOP_WIDTH + CONSTANTS.BACKBOARD_WIDTH + 10,\n                CONSTANTS.HOOP_HEIGHT + CONSTANTS.BACKBOARD_HEIGHT)\n        }\n\n    }\n\n    animate(ctx) {\n        // ctx.fillStyle = this.color;\n        // ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n    //     ctx.drawImage(this.courtImage,\n    //         this.position.x - this.courtImage.width / 12, \n    //         this.position.y - this.courtImage.height / 2,\n    //         this.width + this.courtImage.width / 6,\n    //         this.courtImage.height);\n    }\n\n}","import Rect from './utils/rect'\n\nconst CONSTANTS = {\n    HOOP_Y_MULTIPLIER: 0.3,\n    HOOP_HEIGHT: 40,\n    HOOP_WIDTH: 50,\n    HOOP_X_DISTANCE: 50,\n    BACKBOARD_WIDTH: 15,\n    BACKBOARD_HEIGHT: 50,\n}\n\n\nexport default class Hoop extends Rect {\n    constructor(dimensions, hoopSide, ball) {\n        super({ width: CONSTANTS.HOOP_WIDTH, height: CONSTANTS.HOOP_HEIGHT })\n        this.ball = ball\n        this.dimensions = dimensions\n        const x = hoopSide === \"LEFT\" ? (\n                0 + CONSTANTS.HOOP_X_DISTANCE\n            ) : (\n                dimensions.width - CONSTANTS.HOOP_X_DISTANCE - this.width\n            )\n        this.position = {\n            x: x, \n            y: dimensions.height * CONSTANTS.HOOP_Y_MULTIPLIER\n        }\n        this.backboard = new Backboard(this, hoopSide)\n        this.scoreHitbox = new ScoreHitbox(this, hoopSide)\n        this.color = \"purple\"\n        this.score = 0\n        this.justScored = false\n    }\n\n    animate(ctx) {\n        this.checkBallCollision()\n        // this.backboard.animate(ctx)\n        // ctx.fillStyle = this.color;\n        // ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n        // this.scoreHitbox.animate(ctx)\n        if (this.ball.isOverlappingRect(this.scoreHitbox)) {\n            if (!this.justScored) this.score += 2\n            this.justScored = true\n            this.color = \"green\"\n            setTimeout(() => {\n                this.justScored = false\n                this.color = \"purple\"\n            }, 1000);\n            \n        }\n    }\n\n    checkBallCollision () {\n        if (this.ball.isOverlappingRect(this) || this.ball.isOverlappingRect(this.backboard)) {\n            if (this.ball.position.y - this.ball.radius > this.position.y) {\n                if (this.ball.velocity.y > 0) this.ball.velocity.y = -this.ball.velocity.y\n            } else {\n                if (this.ball.position.y + this.ball.radius < this.backboard.position.y && this.ball.velocity.y < 0)  {\n                    this.ball.velocity.y = -this.ball.velocity.y\n                }\n                this.ball.velocity.x = -this.ball.velocity.x\n            }\n        }\n    }\n\n}\n\nclass ScoreHitbox extends Rect {\n    constructor(hoop, hoopSide) {\n        super({ width: CONSTANTS.HOOP_WIDTH - 30, height: CONSTANTS.HOOP_HEIGHT * 0.05 })\n        const x = hoopSide === \"LEFT\" ? (\n            hoop.position.x + 15\n        ) : (\n            hoop.position.x + hoop.width - this.width - 15\n        )\n        this.position = {\n            x: x,\n            y: hoop.position.y\n        }\n        this.color = \"white\"\n    }\n\n    animate(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n    }\n}\n\nclass Backboard extends Rect {\n    constructor(hoop, hoopSide) {\n        super({ width: CONSTANTS.BACKBOARD_WIDTH, height: CONSTANTS.BACKBOARD_HEIGHT })\n        const x = hoopSide === \"LEFT\" ? (\n            hoop.position.x \n        ) : (\n            hoop.position.x + hoop.width - this.width\n        )\n        this.position = {\n            x: x,\n            y: hoop.position.y - this.height\n        }\n        this.color = \"aqua\"\n    }\n\n    animate(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n    }\n}","import Circle from \"./utils/circle\";\n\nconst CONSTANTS = {\n    RADIUS: 15,\n    GRAVITY: 0.5,\n    BOUNCE_RETENTION: 0.6,\n    DRIBBLE_SPEED: 3,\n}\n\nexport default class Ball extends Circle {\n    constructor(dimensions, court, leftHoop, rightHoop, gameId) {\n        super(CONSTANTS.RADIUS)\n        this.court = court\n        this.dimensions = dimensions\n        this.leftHoop = leftHoop\n        this.rightHoop = rightHoop\n        this.leftHoop.ball = this\n        this.rightHoop.ball = this\n\n        this.gameId = gameId\n\n        this.position = {\n            x: this.court.width / 2,\n            y: this.dimensions.height / 2\n        }\n        this.velocity = {\n            x: 0,\n            y: 0\n        }\n        this.color = \"hotpink\"\n        this.possession = null\n        this.noTouch = {}\n        this.power = 0\n    }\n\n    animate(ctx) {\n        this.move();\n        ctx.beginPath();\n        ctx.arc(\n            this.position.x, \n            this.position.y, \n            this.radius, \n            0, \n            Math.PI * 2);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        ctx.closePath();\n    }\n    \n    claimPossession(player) {\n        if (!this.noTouch[player.color]) {\n            this.possession = player\n            socket.emit(\"changeOfPossesion\", {\n                gameId: this.gameId,\n                fromSocket: socket.id\n            })\n        }\n    }\n\n\n    shoot () {\n        // BETA SHOOTING\n\n        // this.power += 1\n        // const shootingPlayer = this.possession\n        // this.position.x = shootingPlayer.facingRight ?\n        //     (shootingPlayer.position.x + shootingPlayer.width + this.radius) :\n        //     (shootingPlayer.position.x - this.radius)\n        // this.position.y = shootingPlayer.position.y\n\n        // if (this.shootingInterval && this.power < 60) {\n        //     clearTimeout(this.shootingInterval)\n        // }\n        // if (this.power < 60) {\n        //     this.shootingInterval = setTimeout(() => {\n\n        \n        //         this.velocity.x = shootingPlayer.facingRight ? 6 : -6\n        //         this.velocity.y = this.power\n        //         this.possession = null\n        \n        //         this.noTouch[shootingPlayer.color] = true        \n        //         setTimeout(() => {\n        //             this.noTouch[shootingPlayer.color] = false\n        //         }, 500);\n        //         this.power = 0\n        //     }, 20);\n        // }\n\n        // AIMBOT SHOOTING\n\n        // const shootingPlayer = this.possession\n        // this.position.x = shootingPlayer.facingRight ?\n        //     (shootingPlayer.position.x + shootingPlayer.width + this.radius) :\n        //     (shootingPlayer.position.x - this.radius)\n        // this.position.y = shootingPlayer.position.y\n\n        // const scorePosition = shootingPlayer.facingRight ? (\n        //     {\n        //         x: this.rightHoop.scoreHitbox.position.x + (this.rightHoop.scoreHitbox.width / 2),\n        //         y: this.rightHoop.scoreHitbox.position.y\n        //     }\n        // ) : (\n        //     {\n        //         x: this.leftHoop.scoreHitbox.position.x + (this.rightHoop.scoreHitbox.width / 2),\n        //         y: this.leftHoop.scoreHitbox.position.y\n        //     }\n\n        // )\n\n        // const numberOfFrames = 50\n\n        // const velocityX = (scorePosition.x - this.position.x) / numberOfFrames\n        // const velocityY = ( (-scorePosition.y + this.position.y) - 0.5 * -CONSTANTS.GRAVITY * (numberOfFrames * numberOfFrames) ) / numberOfFrames\n        \n        // this.velocity = {\n        //     x: velocityX,\n        //     y: velocityY\n        // }\n\n        // this.noTouch[shootingPlayer.color] = true        \n        // setTimeout(() => {\n        //     this.noTouch[shootingPlayer.color] = false\n        // }, 500);\n\n        // this.possession = null\n\n        // POWERBASED AIMED SHOOTING\n\n\n        this.power += 1\n\n        const shootingPlayer = this.possession\n        this.position.x = shootingPlayer.facingRight ?\n            (shootingPlayer.position.x + shootingPlayer.width + this.radius) :\n            (shootingPlayer.position.x - this.radius)\n        this.position.y = shootingPlayer.position.y\n\n        if (this.shootingTimeout && this.power < 60) {\n            clearTimeout(this.shootingTimeout)\n        }\n        if (this.power < 60) {\n            this.shootingTimeout = setTimeout(() => {\n                this.releaseBall()\n            }, 20);\n        }\n\n    }\n\n    releaseBall () {\n        const shootingPlayer = this.possession\n\n        const scorePosition = shootingPlayer.facingRight ? (\n            {\n                x: this.rightHoop.scoreHitbox.position.x + (this.rightHoop.scoreHitbox.width / 2),\n                y: this.rightHoop.scoreHitbox.position.y\n            }\n        ) : (\n            {\n                x: this.leftHoop.scoreHitbox.position.x + (this.rightHoop.scoreHitbox.width / 2),\n                y: this.leftHoop.scoreHitbox.position.y\n            }\n        )\n\n        // LAYUP\n        if (150 > Math.hypot(this.position.x - scorePosition.x, this.position.y - scorePosition.y)) {\n            const numberOfFrames = 30\n            const velocityX = (scorePosition.x - this.position.x) / numberOfFrames\n            const velocityY = ((-scorePosition.y + this.position.y) - 0.5 * -CONSTANTS.GRAVITY * (numberOfFrames * numberOfFrames)) / numberOfFrames\n\n            const diff = (this.power - 30) / 20\n            const adjustedX = shootingPlayer.facingRight ? (\n                velocityX + diff\n            ) : (\n                velocityX - diff\n            )\n            this.velocity = {\n                x: adjustedX,\n                y: velocityY\n            }\n        } else {\n            // SHOT\n            const numberOfFrames = 50\n            \n            const velocityX = (scorePosition.x - this.position.x) / numberOfFrames\n            const velocityY = ((-scorePosition.y + this.position.y) - 0.5 * -CONSTANTS.GRAVITY * (numberOfFrames * numberOfFrames)) / numberOfFrames\n    \n            const diff = (this.power - 30) / 6\n            const adjustedX = shootingPlayer.facingRight ? (\n                velocityX + diff\n            ) : (\n                velocityX - diff\n            )\n            this.velocity = {\n                x: adjustedX,\n                y: velocityY\n            }\n    \n        }\n\n        this.noTouch[shootingPlayer.color] = true\n        setTimeout(() => {\n            this.noTouch[shootingPlayer.color] = false\n        }, 500);\n\n        this.power = 0\n        this.removePossession()\n\n    }\n\n    removePossession() {\n        this.possession = null\n        socket.emit(\"removeBallPossession\", {\n            gameId: this.gameId,\n            fromSocket: socket.id,\n            velocity: this.velocity,\n            position: this.position\n        })\n    }\n\n    move() {\n\n        if (!this.possession) {\n            this.fall()\n            \n        } else {\n            this.moveWithPlayerPossession() \n        }\n\n        this.checkBounds()\n    }\n\n    moveWithPlayerPossession() {\n        this.position.x = this.possession.facingRight ?\n            (this.possession.position.x + this.possession.width) : (this.possession.position.x)\n\n        if (this.possession.jumping) {\n            // HOLD BALL\n            this.position.y = this.possession.position.y + this.possession.height / 2\n\n        } else {\n            // DRIBBLING\n            if (this.position.y < this.possession.position.y + this.possession.height / 2) {\n                this.velocity.y = -CONSTANTS.DRIBBLE_SPEED\n            } else if (this.position.y > this.possession.position.y + this.possession.height - this.radius) {\n                this.velocity.y = CONSTANTS.DRIBBLE_SPEED\n            }\n            this.position.y -= this.velocity.y\n        }\n        // socket.emit(\"updateBallWithPos\", {\n        //     gameId: this.gameId,\n        //     fromSocket: socket.id,\n        //     velocity: this.velocity,\n        //     position: this.position,\n        //     otherPlayerFacing: this.possession.facingRight\n        // })\n    }\n\n\n    fall () {\n        this.position.y -= this.velocity.y;\n        this.position.x += this.velocity.x;\n        // GRAVITY\n        // if the pos is greater than the floor\n        if (this.position.y + this.radius < this.court.position.y) {\n            this.velocity.y -= CONSTANTS.GRAVITY;\n            // else set the reverse velocity\n        } else if (this.velocity.y < 0) {\n            this.velocity.y = -this.velocity.y * CONSTANTS.BOUNCE_RETENTION\n        }\n    }\n\n\n    checkBounds() {\n        if (this.position.x > this.court.width - this.radius) {\n            this.position.x = this.court.width - this.radius\n            this.velocity.x = -this.velocity.x\n        } else if (this.position.x < 0) {\n            this.position.x = 0\n            this.velocity.x = -this.velocity.x\n        }\n    }\n\n}","export default class Circle {\n    constructor(radius) {\n        this.radius = radius;\n    }\n\n    isOverlappingRect(rect) {\n        const distX = Math.abs(this.position.x - rect.position.x - rect.width / 2);\n        const distY = Math.abs(this.position.y - rect.position.y - rect.height / 2);\n        if (distX > (rect.width / 2 + this.radius)) { return false; }\n        if (distY > (rect.height / 2 + this.radius)) { return false; }\n\n        if (distX <= (rect.width / 2)) { return true; }\n        if (distY <= (rect.height / 2)) { return true; }\n\n        const dx = distX - rect.width / 2;\n        const dy = distY - rect.height / 2;\n        return (dx * dx + dy * dy <= (this.radius * this.radius));\n    }\n\n    getBounds() {\n        return {\n            left: this.position.x,\n            right: this.position.x + this.width,\n            top: this.position.y,\n            bottom: this.position.y + this.height\n        };\n    }\n\n}","export default class Scoreboard {\n    constructor(dimensions, leftHoop, rightHoop) {\n        this.dimensions = dimensions\n        this.leftHoop = leftHoop\n        this.rightHoop = rightHoop\n        this.timeLeft = 60\n        this.countDown = setInterval(() => { \n            this.timeLeft--\n            if (this.timeLeft === 0) clearInterval(this.countDown)\n        }, 1000);\n    }\n\n    animate (ctx) {\n        const leftNameLoc = { x: this.dimensions.width / 3, y: this.dimensions.height / 10}\n        ctx.font = \"bold 22pt 'Scoreboard'\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\"; \n        ctx.fillText(`Player 1`, leftNameLoc.x, leftNameLoc.y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n        ctx.strokeText(`Player 1`, leftNameLoc.x, leftNameLoc.y);\n\n        const leftScoreLoc = { x: this.dimensions.width / 3, y: this.dimensions.height / 5 }\n        ctx.font = \"bold 40pt 'Scoreboard'\";\n        ctx.fillStyle = \"red\";\n        ctx.textAlign = \"center\"; \n        ctx.fillText(`${this.rightHoop.score}`, leftScoreLoc.x, leftScoreLoc.y);\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 1;\n        ctx.strokeText(`${this.rightHoop.score}`, leftScoreLoc.x, leftScoreLoc.y);\n\n        const timeLeftLoc = { x: this.dimensions.width / 2, y: this.dimensions.height / 5 }\n        ctx.font = \"bold 64pt 'Scoreboard'\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(`${this.timeLeft}`, timeLeftLoc.x, timeLeftLoc.y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 2;\n        ctx.strokeText(`${this.timeLeft}`, timeLeftLoc.x, timeLeftLoc.y);\n\n        const rightNameLoc = { x: this.dimensions.width * 2 / 3, y: this.dimensions.height / 10 }\n        ctx.font = \"bold 22pt 'Scoreboard'\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(`Player 2`, rightNameLoc.x, rightNameLoc.y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n        ctx.strokeText(`Player 2`, rightNameLoc.x, rightNameLoc.y);\n\n        const rightScoreLoc = { x: this.dimensions.width * 2 / 3, y: this.dimensions.height / 5 }\n        ctx.font = \"bold 40pt 'Scoreboard'\";\n        ctx.fillStyle = \"red\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(`${this.leftHoop.score}`, rightScoreLoc.x, rightScoreLoc.y);\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 1;\n        ctx.strokeText(`${this.leftHoop.score}`, rightScoreLoc.x, rightScoreLoc.y);\n\n\n\n        // let loc = { x: this.dimensions.width / 2, y: this.dimensions.height / 10 }\n        // ctx.font = \"bold 40pt 'Scoreboard'\";\n        // ctx.fillStyle = \"white\";\n        // ctx.textAlign = \"center\"; \n        // ctx.fillText(`Player 1: ${this.rightHoop.score} Player 2: ${this.leftHoop.score}`, loc.x, loc.y);\n        // ctx.strokeStyle = \"black\";\n        // ctx.lineWidth = 2;\n        // ctx.strokeText(`Player 1: ${this.rightHoop.score} Player 2: ${this.leftHoop.score}`, loc.x, loc.y);\n\n        // loc = { x: this.dimensions.width / 2, y: this.dimensions.height / 5 }\n        // ctx.fillStyle = \"white\";\n        // ctx.textAlign = \"center\";\n        // ctx.fillText(`${this.timeLeft}`, loc.x, loc.y);\n        // ctx.strokeStyle = \"black\";\n        // ctx.lineWidth = 2;\n        // ctx.strokeText(`${this.timeLeft}`, loc.x, loc.y);\n    }\n}","import Player from \"./player\";\n\nconst CONSTANTS = {\n    GRAVITY: 0.5,\n    PLAYER_WIDTH: 40,\n    PLAYER_HEIGHT: 70,\n    MOVESPEED: 5,\n    // WITH_BALL_MOVESPEED: 3.5,\n    JUMP_HEIGHT: 14,\n    // ON_FIRE_JUMP_HEIGHT: 16\n};\n\nexport default class Player2 extends Player {\n    constructor(court, ball, spriteSrc) {\n        super(court, ball, spriteSrc)\n\n        this.position = {\n            x: 0,\n            y: this.court.position.y - this.height\n        }\n        this.color = \"black\";\n        this.jumping = false;\n        this.facingRight = false;\n    }\n\n    move() {\n        if (key.isPressed('d')) {\n            this.position.x += CONSTANTS.MOVESPEED;\n            this.facingRight = true\n        }\n        if (key.isPressed('a')) {\n            this.position.x -= CONSTANTS.MOVESPEED;\n            this.facingRight = false\n        }\n\n        // JUMPING\n        if (key.isPressed('w') && !this.jumping) {\n            this.velocity.y = CONSTANTS.JUMP_HEIGHT;\n            this.jumping = true\n        }\n\n        if (key.isPressed('q')) {\n            this.preformAction();\n        }\n\n        this.checkBall()\n\n        this.handleGravity()\n\n        this.checkBounds()\n    }\n\n}","import key from '../utils/keymaster';\nimport CharacterSelect from './character_select';\n\nexport default class MainMenu {\n    constructor (dimensions, startGame, startOnlineGame) {\n        this.dimensions = dimensions\n        this.startGame = startGame\n        this.startOnlineGame = startOnlineGame\n        this.selectedOption = 0\n        this.options = [\"Start Game\", \"Online\"]\n        this.characterSelect = new CharacterSelect(this.dimensions, this.selectedCharacters.bind(this))\n        this.selectingCharacters = false\n        this.setupKeyHandlers()\n    }\n\n    selectedCharacters (leftSrc, rightSrc, gameId) {\n        this.selectingCharacters = false\n        if (this.characterSelect.onlineMode) {\n            this.characterSelect.onlineMode = false\n            const mySide = this.characterSelect.isPlayingLeft ? \"LEFT\" : \"RIGHT\"\n            this.startOnlineGame(leftSrc, rightSrc, mySide, gameId)\n        } else {\n            this.startGame(leftSrc, rightSrc)\n        }\n    }\n    \n\n    render (ctx) {\n        ctx.fillStyle = \"purple\";\n        ctx.fillRect(0, 0, this.dimensions.width, this.dimensions.height);\n        if (!this.selectingCharacters) {\n            this.options.forEach((option, i) => {\n                const loc = { x: this.dimensions.width / 2, y: this.dimensions.height / ((this.options.length + 1) - i) }\n                ctx.font = \"bold 40pt serif\";\n                ctx.textAlign = \"center\";\n                ctx.fillStyle = \"white\";\n\n                const width = ctx.measureText(`${option}`).width\n\n                if (this.selectedOption === i) ctx.fillRect((loc.x - width / 2) - 5, loc.y - 40, width + 10, 50);\n                ctx.fillText(`${option}`, loc.x, loc.y);\n                ctx.strokeStyle = \"black\";\n                ctx.lineWidth = 2;\n                ctx.strokeText(`${option}`, loc.x, loc.y);\n            })\n        } else if (this.selectingCharacters) {\n            this.characterSelect.render(ctx)\n        }\n    }\n\n    setupKeyHandlers() {\n        key('down', () => {\n            this.selectedOption = (this.selectedOption + 1) % this.options.length\n        })\n        key('up', () => {\n            this.selectedOption = Math.abs((this.selectedOption - 1) % this.options.length)\n        })\n        key('enter', () => {\n            if (this.selectedOption === 0 && !this.selectingCharacters) {\n                key.unbind('down')\n                key.unbind('up')\n                key.unbind('enter')\n                this.selectingCharacters = true\n                this.characterSelect.onlineMode = false\n                this.characterSelect.setupKeyHandlers()\n            } else if (this.selectedOption === 1 && !this.selectingCharacters) {\n                key.unbind('down')\n                key.unbind('up')\n                key.unbind('enter')\n                this.selectingCharacters = true\n                this.characterSelect.onlineMode = true\n                socket.emit('playerAddedToQueue', socket.id)\n                this.characterSelect.setupKeyHandlers()\n            }\n        })\n\n    }\n    \n\n\n\n}","import key from '../utils/keymaster';\n\nexport default class CharacterSelect {\n    constructor(dimensions, selectedCharacters) {\n        this.dimensions = dimensions\n        this.selectedCharacters = selectedCharacters\n        this.leftSelected = 0\n        this.rightSelected = 1\n        this.characters = [\n            { name: \"Rodman\", src: \"src/assets/rodmanSmall.png\"},\n            { name: \"Drake\", src: \"src/assets/drakeSmall.png\" },\n            { name: \"Lebron\", src: \"src/assets/lebronSmall.png\" },\n            { name: \"Peach\", src: \"src/assets/peachSmall.png\"}\n        ]\n        \n        this.leftChar = new Image();\n        this.rightChar = new Image();\n        this.leftChar.src = this.characters[this.leftSelected].src\n        this.rightChar.src = this.characters[this.rightSelected].src\n\n        this.leftReady = false\n        this.rightReady = false\n\n        socket.on(\"matchFound\", data => {\n            this.leftPlayerId = data[\"leftPlayerId\"]\n            this.rightPlayerId = data[\"rightPlayerId\"]\n            if (socket.id === this.leftPlayerId) {\n                this.isPlayingLeft = true\n            } else {\n                this.isPlayingRight = true\n            }\n            this.leftSelected = 0\n            this.rightSelected = 1\n            this.gameId = data[\"gameId\"]\n        })\n\n        socket.on(\"updatedSelectedChars\", data => {\n            this.leftSelected = data[\"leftSelected\"]\n            this.rightSelected = data[\"rightSelected\"]\n        })\n\n        socket.on(\"updatedLeftReady\", () => {\n            this.leftReady = true\n        })\n        socket.on(\"updatedRightReady\", () => {\n            this.rightReady = true\n        })\n\n        socket.on(\"startGame\", () => {\n            key.unbind('down')\n            key.unbind('up')\n            key.unbind('w')\n            key.unbind('s')\n            key.unbind('enter')\n            this.selectedCharacters(this.characters[this.leftSelected].src, this.characters[this.rightSelected].src, this.gameId)\n            this.leftPlayerId = null\n            this.rightPlayerId = null\n            this.isPlayingLeft = false\n            this.isPlayingRight = false\n            this.onlineMode = false\n            this.leftSelected = 0\n            this.rightSelected = 1\n            this.leftReady = false\n            this.rightReady = false\n            this.gameId = null\n        })\n    }\n\n    render(ctx) {\n\n        this.leftChar.src = this.characters[this.leftSelected].src\n        this.rightChar.src = this.characters[this.rightSelected].src\n\n        ctx.fillStyle = \"purple\";\n        ctx.fillRect(0, 0, this.dimensions.width, this.dimensions.height);\n\n        // LEFT SIDE\n        const leftSideChar = this.characters[this.leftSelected]\n        let loc = { x: this.dimensions.width / 4, y: this.dimensions.height / 2}\n        ctx.font = \"bold 40pt serif\";\n        ctx.textAlign = \"center\";\n        ctx.fillStyle = \"white\";\n\n        if (this.onlineMode) ctx.fillText(\"Online Mode\", loc.x, loc.y - 100)\n        ctx.font = \"bold 12pt serif\";\n        if (this.leftReady) ctx.fillText(\"Ready\", loc.x, loc.y - 70)\n        if (this.leftPlayerId && this.rightPlayerId) {\n            ctx.fillText(`${this.leftPlayerId}`, loc.x, loc.y - 50)\n        } else if (this.onlineMode) {\n            ctx.fillText(`${socket.id}`, loc.x, loc.y - 50)\n        }\n\n        ctx.font = \"bold 40pt serif\";\n        ctx.fillText(`${leftSideChar.name}`, loc.x, loc.y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 2;\n        ctx.strokeText(`${leftSideChar.name}`, loc.x, loc.y);\n        ctx.drawImage(this.leftChar,\n            loc.x - this.leftChar.width / 2,\n            loc.y)\n\n        // RIGHT SIDE\n        const rightSideChar = this.characters[this.rightSelected]\n        loc = { x: this.dimensions.width * 3 / 4, y: this.dimensions.height / 2 }\n        ctx.font = \"bold 40pt serif\";\n        ctx.textAlign = \"center\";\n        ctx.fillStyle = \"white\";\n\n        if (this.onlineMode) ctx.fillText(\"Online Mode\", loc.x, loc.y - 100)\n        ctx.font = \"bold 12pt serif\";\n        if (this.rightReady) ctx.fillText(\"Ready\", loc.x, loc.y - 70)\n        if (this.leftPlayerId && this.rightPlayerId) {\n            ctx.fillText(`${this.rightPlayerId}`, loc.x, loc.y - 50)\n        } else if (this.onlineMode) {\n            ctx.fillText(`Waiting for Player`, loc.x, loc.y - 50)\n        }\n        ctx.font = \"bold 40pt serif\";\n\n        ctx.fillText(`${rightSideChar.name}`, loc.x, loc.y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 2;\n        ctx.strokeText(`${rightSideChar.name}`, loc.x, loc.y);\n        ctx.drawImage(this.rightChar,\n            loc.x - this.rightChar.width / 2,\n            loc.y)\n \n    }\n\n    setupKeyHandlers() {\n\n        setTimeout(() => {\n            if (!this.onlineMode) {\n                key('down', () => {\n                    this.rightSelected = (this.rightSelected + 1) % this.characters.length\n                })\n                key('up', () => {\n                    this.rightSelected = (this.rightSelected - 1)\n                    if (this.rightSelected === -1) this.rightSelected = this.characters.length - 1\n                })\n                key('w', () => {\n                    this.leftSelected = (this.leftSelected + 1) % this.characters.length\n    \n                })\n                key('s', () => {\n                    this.leftSelected = (this.leftSelected - 1) % this.characters.length\n                    if (this.leftSelected === -1) this.leftSelected = this.characters.length - 1\n    \n                })\n                key('enter', () => {\n                    key.unbind('down')\n                    key.unbind('up')\n                    key.unbind('w')\n                    key.unbind('s')\n                    key.unbind('enter')\n                    this.selectedCharacters(this.characters[this.leftSelected].src, this.characters[this.rightSelected].src)\n                })\n            } else if (this.onlineMode) {\n\n                key('up', () => {\n                    if(this.gameId && this.onlineMode) {\n                        if (this.isPlayingLeft) {\n                            this.leftSelected = (this.leftSelected + 1) % this.characters.length\n                            socket.emit('charChanged', {\n                                rightSelected: this.rightSelected,\n                                leftSelected: this.leftSelected,\n                                gameId: this.gameId\n                            })\n                        } else if (this.isPlayingRight) {\n                            this.rightSelected = (this.rightSelected - 1)\n                            if (this.rightSelected === -1) this.rightSelected = this.characters.length - 1\n                            socket.emit('charChanged', {\n                                rightSelected: this.rightSelected,\n                                leftSelected: this.leftSelected,\n                                gameId: this.gameId\n                            })\n                        }\n                    }\n                })\n                key('down', () => {\n                    if (this.gameId && this.onlineMode) {\n                        if (this.isPlayingLeft) {\n                            this.leftSelected = (this.leftSelected - 1) % this.characters.length\n                            if (this.leftSelected === -1) this.leftSelected = this.characters.length - 1\n                            socket.emit('charChanged', {\n                                rightSelected: this.rightSelected,\n                                leftSelected: this.leftSelected,\n                                gameId: this.gameId\n                            })\n                        } else if (this.isPlayingRight) {\n                            this.rightSelected = (this.rightSelected + 1) % this.characters.length\n                            socket.emit('charChanged', {\n                                rightSelected: this.rightSelected,\n                                leftSelected: this.leftSelected,\n                                gameId: this.gameId\n                            })\n                        }\n                    }\n                })\n                key('enter', () => {\n                    if (this.gameId && this.onlineMode) {\n                        if (this.isPlayingLeft) {\n                            socket.emit('leftReady', {\n                                gameId: this.gameId\n                            })\n                        } else if (this.isPlayingRight) {\n                            socket.emit('rightReady', {\n                                gameId: this.gameId\n                            })\n                        }\n                    }\n                })\n\n\n            }\n        }, 100);\n    }\n\n\n\n\n}","import Player from \"./player\";\n\n\nconst CONSTANTS = {\n    GRAVITY: 0.5,\n    PLAYER_WIDTH: 40,\n    PLAYER_HEIGHT: 70,\n    MOVESPEED: 5,\n    // WITH_BALL_MOVESPEED: 3.5,\n    JUMP_HEIGHT: 14,\n    // ON_FIRE_JUMP_HEIGHT: 16\n};\n\nexport default class OnlinePlayer extends Player {\n    constructor(court, ball, spriteSrc, startSide, active) {\n        super(court, ball, spriteSrc)\n        \n        this.position = startSide === \"LEFT\" ? ({\n            x: 0,\n            y: this.court.position.y - this.height\n        }) : ({\n            x: this.court.width - this.width,\n            y: this.court.position.y - this.height\n        })\n\n        if (!this.active) this.color = \"black\"\n        this.active = active\n    }\n\n\n\n    animate(ctx) {\n        if (this.active) {\n            this.move()\n        }\n\n        ctx.drawImage(this.sprite,\n            this.position.x - 5,\n            this.position.y - this.sprite.height / 3)\n    }\n\n    move() {\n        if (key.isPressed('right')) {\n            this.position.x += CONSTANTS.MOVESPEED;\n            this.facingRight = true\n        }\n        if (key.isPressed('left')) {\n            this.position.x -= CONSTANTS.MOVESPEED;\n            this.facingRight = false\n        }\n\n        // JUMPING\n        if (key.isPressed('up') && !this.jumping) {\n            this.velocity.y = CONSTANTS.JUMP_HEIGHT;\n            this.jumping = true\n        }\n\n        if (key.isPressed('space')) {\n            this.preformAction();\n        }\n\n        this.checkBall()\n\n        this.handleGravity()\n\n        this.checkBounds()\n    }\n\n}\n\n"],"sourceRoot":""}